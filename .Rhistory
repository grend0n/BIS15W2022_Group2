ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1")),
))))
server <- function(input, output) {
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1")),
)
server <- function(input, output) {
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1")),
)
server <- function(input, output) {
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1"))
server <- function(input, output) {
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1")))))))
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1"))))))))
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1")))))))
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1"))
)
)
)
)
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1"))
)
)
)
)
server <- function(input, output) {
library(shiny)
library(ggplot2)  # for the diamonds dataset
ui <- fluidPage(
title = "Examples of DataTables",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset === "diamonds"',
checkboxGroupInput("show_vars", "Columns in diamonds to show:",
names(diamonds), selected = names(diamonds))
),
mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("diamonds", DT::dataTableOutput("mytable1"))
)
)
)
)
)
library(shiny)
library(DT)
ui <- basicPage(
h2("Indian Food Cookbook"),
DT::dataTableOutput("mytable")
)
server <- function(input, output) {
output$mytable = DT::renderDataTable({
indian_food
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
ui <- basicPage(
h2("Indian Food Cookbook"),
DT::dataTableOutput("mytable")
)
server <- function(input, output) {
output$mytable = DT::renderDataTable({
DT::datatable(indian_food, [input$show_vars, drop=FALSE])
library(shiny)
library(DT)
library(ggplot2)
ui <- basicPage(
h2("Indian Food Cookbook"),
DT::dataTableOutput("mytable")
)
server <- function(input, output) {
output$mytable = DT::renderDataTable({
DT::datatable(indian_food, [input$show_vars, drop=FALSE])
library(shiny)
library(DT)
library(ggplot2)
ui <- basicPage(
h2("Indian Food Cookbook"),
DT::dataTableOutput("mytable")
)
server <- function(input, output) {
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE])
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- basicPage(
h2("Indian Food Cookbook"),
DT::dataTableOutput("mytable")
)
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE])
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset==="indian_food"',
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
)
)
)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset==="indian_food"',
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
)
)
))
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
conditionalPanel(
'input.dataset==="indian_food"',
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
)
server <- function(input, output) {
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
)
server <- function(input, output) {
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE])
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
datatable(indian_food, options=list(pageLength=5))%>%
formatStyle('ingredients', backgroundColor='blue')
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
datatable(indian_food, options=list(pageLength=5))%>%
formatStyle('ingredients', backgroundColor='red')
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))%>%
datatable(indian_food, options=list(pageLength=5))%>%
formatStyle('ingredients', backgroundColor='red')
)
))
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1000),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 255),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1136),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
library(shiny)
indian_food<- read_csv(here("indian_food_data.csv"))%>%
clean_names()%>%
na_if("-1")%>%
mutate_all(tolower)%>%
transform(ingredients=str_split(ingredients,","))%>%
unnest(ingredients)%>%
mutate(total_cook_time=as.numeric(cook_time)+as.numeric(prep_time))
library(shiny)
library(DT)
library(ggplot2)
ui <- fluidPage(
title="Indian Food Cookbook",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("show_vars", "Columns in Indian Food", names(indian_food), selected=names(indian_food))
),
mainPanel(
id='indian_food',
tabPanel("indian food", DT::dataTableOutput("mytable"))
)
))
server <- function(input, output) {
indian_food=indian_food[sample(nrow(indian_food), 1136),]
output$mytable = DT::renderDataTable({
DT::datatable(indian_food[,input$show_vars, drop=FALSE], options=list(orderClasses=TRUE))
})
}
shinyApp(ui,server)
